"use client"

import { useState } from "react"
import { Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { formatRupiah } from "@/lib/product-utils"
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select"
import InventoryCharts from "./InventoryCharts"

// Dummy data untuk contoh
const dummyInventory = [
  {
    id: 1,
    productName: "Parfum A",
    sku: "PA001",
    stock: 25,
    minStock: 10,
    maxStock: 50,
    lastRestock: "2024-01-10",
    status: "normal", // low, normal, overstock
  },
  {
    id: 2,
    productName: "Parfum B",
    sku: "PB001",
    stock: 8,
    minStock: 15,
    maxStock: 45,
    lastRestock: "2024-01-05",
    status: "low",
  },
]

const dummyMarketingCosts = {
  digital: 2000000,
  offline: 1500000,
  events: 3000000,
  influencer: 2500000,
}

export default function InventoryPage() {
  const [inventory] = useState(dummyInventory)
  const [marketingCosts, setMarketingCosts] = useState(dummyMarketingCosts)
  const [selectedProduct, setSelectedProduct] = useState("")

  const totalStock = inventory.reduce((acc, curr) => acc + curr.stock, 0)
  const lowStockItems = inventory.filter((item) => item.status === "low").length
  const totalMarketingCosts = Object.values(marketingCosts).reduce((a, b) => a + b, 0)

  const handleMarketingCostChange = (key: keyof typeof dummyMarketingCosts, value: string) => {
    setMarketingCosts((prev) => ({
      ...prev,
      [key]: parseFloat(value) || 0,
    }))
  }

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold">Inventory & Biaya Marketing</h2>
        <Button>
          Update Stok
        </Button>
      </div>

      {/* Summary Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card className="p-6">
          <h3 className="text-sm font-medium text-gray-500">Total Stok</h3>
          <p className="text-2xl font-bold mt-2">{totalStock} unit</p>
          <p className="text-sm text-gray-600 mt-1">Semua Produk</p>
        </Card>

        <Card className="p-6">
          <h3 className="text-sm font-medium text-gray-500">Stok Menipis</h3>
          <p className="text-2xl font-bold mt-2">{lowStockItems} produk</p>
          <p className="text-sm text-gray-600 mt-1">Perlu restock</p>
        </Card>

        <Card className="p-6">
          <h3 className="text-sm font-medium text-gray-500">Total Biaya Marketing</h3>
          <p className="text-2xl font-bold mt-2">{formatRupiah(totalMarketingCosts)}</p>
          <p className="text-sm text-gray-600 mt-1">Bulan ini</p>
        </Card>

        <Card className="p-6">
          <h3 className="text-sm font-medium text-gray-500">Cost per Unit</h3>
          <p className="text-2xl font-bold mt-2">
            {formatRupiah(totalMarketingCosts / totalStock)}
          </p>
          <p className="text-sm text-gray-600 mt-1">Marketing/Unit</p>
        </Card>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Inventory Management */}
        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">Manajemen Inventory</h3>
          <div className="space-y-4">
            <div className="flex gap-4">
              <Select value={selectedProduct} onValueChange={setSelectedProduct}>
                <SelectTrigger className="w-full">
                  <SelectValue placeholder="Pilih Produk" />
                </SelectTrigger>
                <SelectContent>
                  {inventory.map((item) => (
                    <SelectItem key={item.id} value={item.id.toString()}>
                      {item.productName}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
              <Button variant="outline">
                Tambah Produk
              </Button>
            </div>

            <div className="rounded-md border">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>Produk</TableHead>
                    <TableHead>SKU</TableHead>
                    <TableHead>Stok</TableHead>
                    <TableHead>Status</TableHead>
                    <TableHead>Terakhir Restock</TableHead>
                    <TableHead className="text-right">Aksi</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {inventory.map((item) => (
                    <TableRow key={item.id}>
                      <TableCell>{item.productName}</TableCell>
                      <TableCell>{item.sku}</TableCell>
                      <TableCell>{item.stock}</TableCell>
                      <TableCell>
                        <span
                          className={\`px-2 py-1 rounded-full text-xs \${
                            item.status === "low"
                              ? "bg-red-100 text-red-800"
                              : item.status === "overstock"
                              ? "bg-yellow-100 text-yellow-800"
                              : "bg-green-100 text-green-800"
                          }\`}
                        >
                          {item.status === "low"
                            ? "Stok Menipis"
                            : item.status === "overstock"
                            ? "Overstock"
                            : "Normal"}
                        </span>
                      </TableCell>
                      <TableCell>
                        {new Date(item.lastRestock).toLocaleDateString("id-ID")}
                      </TableCell>
                      <TableCell className="text-right">
                        <Button variant="outline" size="sm">
                          Update
                        </Button>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </div>
          </div>
        </Card>

        {/* Marketing Costs */}
        <Card className="p-6">
          <h3 className="text-lg font-semibold mb-4">Biaya Marketing</h3>
          <div className="space-y-4">
            <div className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="digital">Biaya Marketing Digital</Label>
                <Input
                  id="digital"
                  type="number"
                  value={marketingCosts.digital}
                  onChange={(e) => handleMarketingCostChange("digital", e.target.value)}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="offline">Biaya Marketing Offline</Label>
                <Input
                  id="offline"
                  type="number"
                  value={marketingCosts.offline}
                  onChange={(e) => handleMarketingCostChange("offline", e.target.value)}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="events">Biaya Event</Label>
                <Input
                  id="events"
                  type="number"
                  value={marketingCosts.events}
                  onChange={(e) => handleMarketingCostChange("events", e.target.value)}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="influencer">Biaya Influencer</Label>
                <Input
                  id="influencer"
                  type="number"
                  value={marketingCosts.influencer}
                  onChange={(e) => handleMarketingCostChange("influencer", e.target.value)}
                />
              </div>
            </div>

            <div className="pt-4 border-t">
              <div className="flex justify-between items-center mb-2">
                <span className="text-sm text-gray-600">Total Biaya Marketing:</span>
                <span className="font-semibold">{formatRupiah(totalMarketingCosts)}</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600">Biaya per Unit:</span>
                <span className="font-semibold">
                  {formatRupiah(totalMarketingCosts / totalStock)}
                </span>
              </div>
            </div>

            <div className="flex justify-end space-x-2">
              <Button variant="outline">Reset</Button>
              <Button>Simpan Perubahan</Button>
            </div>
          </div>
        </Card>
      </div>

      {/* Stock Analysis */}
      <Card className="p-6">
        <h3 className="text-lg font-semibold mb-4">Analisis Stok</h3>
        <InventoryCharts
          inventoryData={inventory}
          marketingCosts={marketingCosts}
        />
      </Card>
    </div>
  )
}
